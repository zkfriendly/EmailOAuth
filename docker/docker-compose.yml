services:
  node:
    build:
      context: .
      dockerfile: Dockerfile.node
    ports:
      - "${NODE_PORT}:8545"
    command: [
      "anvil",
      "--host", "0.0.0.0",
      "--port", "8545",
      "--block-time", "12",
      "--gas-limit", "12000000",
      "--chain-id", "1337"
    ]

  scanner:
    image: otterscan/otterscan:latest
    ports:
      - "${SCANNER_PORT}:80"

  smtp:
    build:
      context: .
      dockerfile: Dockerfile.smtp
    environment:
      - SERVER_HOST=${SMTP_INTERNAL_SERVER_HOST}
      - SERVER_PORT=${SMTP_INTERNAL_SERVER_PORT}
      - SMTP_DOMAIN_NAME=${SMTP_DOMAIN_NAME}
      - SMTP_LOGIN_ID=${SMTP_LOGIN_ID}
      - SMTP_LOGIN_PASSWORD=${SMTP_LOGIN_PASSWORD}
      - MESSAGE_ID_DOMAIN=${SMTP_MESSAGE_ID_DOMAIN}
      - JSON_LOGGER=${SMPT_JSON_LOGGER}
    ports:
      - "${SMTP_PORT}:${SMTP_INTERNAL_SERVER_PORT}"
    command: ["relayer-smtp"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SMTP_INTERNAL_SERVER_PORT}/api/ping"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  imap:
    build:
      context: .
      dockerfile: Dockerfile.imap
    environment:
      - RELAYER_ENDPOINT=http://relayer:${RELAYER_PORT}/signAndSend
      - IMAP_LOGIN_ID=${IMAP_LOGIN_ID}
      - IMAP_LOGIN_PASSWORD=${IMAP_LOGIN_PASSWORD}
      - IMAP_DOMAIN_NAME=${IMAP_DOMAIN_NAME}
      - IMAP_PORT=${IMAP_PORT}
      - AUTH_TYPE=${IMAP_AUTH_TYPE}
      - JSON_LOGGER=${IMAP_JSON_LOGGER}
    command: ["relayer-imap"]

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=${POSTGRES_DB:-relayer}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: [
      "postgres",
      "-c", "listen_addresses=*",
    ]

  relayer:
    build:
      context: .
      dockerfile: Dockerfile.relayer
    ports:
      - "${RELAYER_PORT}:8000"
    command: ["cargo", "run"]

volumes:
  postgres_data: